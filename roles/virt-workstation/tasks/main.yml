---
- name: validate cpu architecture supports virtualization
  ansible.builtin.shell: egrep '^flags.*(vmx|svm)' /proc/cpuinfo
  register: cpuinfo

- name: show cpuinfo
  ansible.builtin.debug:
    var: cpuinfo.stdout_lines
  failed_when: "'vmx' not in cpuinfo.stdout and 'svm' not in cpuinfo.stdout"

- name: create /etc/polkit-1/localauthority/50-local.d/ directory
  ansible.builtin.file:
    path: /etc/polkit-1/localauthority/50-local.d/
    state: directory
    owner: root
    group: polkitd
    mode: 0750

- name: Download virtio repo configuration
  ansible.builtin.get_url:
    url: https://fedorapeople.org/groups/virt/virtio-win/virtio-win.repo
    dest: /etc/yum.repos.d/virtio-win.repo
    mode: '0644'

- name: Install RHEL/CentOS Packages
  ansible.builtin.yum: 
    name: qemu-kvm, virt-manager, virt-viewer, virt-install, libvirt, libvirt-client, virt-what, libguestfs, virtio-win, python3-lxml
    state: latest

- name: start and enable libvirtd service
  ansible.builtin.service:
    name: libvirtd
    state: restarted
    enabled: yes

- name: validate kvm modules loaded properly
  ansible.builtin.shell: lsmod |grep kvm
  register: lsmod_output

- name: show lsmod_output
  ansible.builtin.debug:
    var: lsmod_output.stdout_lines
  failed_when: "'kvm_intel' not in lsmod_output.stdout and 'kvm_amd' not in cpuinfo.stdout"

- name: Adding user {{ libvirt_users }} to {{libvirt_groups}}
  ansible.builtin.user:
    name={{ item }}
    groups={{libvirt_groups}}
    append=yes
  with_items:
    - "{{ libvirt_users }}"

- name: modify DHCP scope of "default" network
  community.libvirt.virt_net:
    name: default
    command: modify
    xml: "<range start='192.168.122.20' end='192.168.122.254'/>"

- name: restore SELinux Context on /etc/yum.repos.d
  ansible.builtin.command: restorecon -RFv /etc/yum.repos.d

- name: install virtio-win rpms
  ansible.builtin.package:
    name: virtio-win
    state: latest

...
