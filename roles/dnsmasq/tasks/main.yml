---
- name: stop systemd-resolved service
  ansible.builtin.service:
    name: systemd-resolved
    state: stopped
    enabled: false
    masked: true
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: disable and mask systemd-resolved service
  ansible.builtin.service:
    name: systemd-resolved

- name: install packages
  ansible.builtin.package:
    name: dnsmasq,tftp-server,tftp,httpd,firewalld,ipxe-bootimgs-aarch64.noarch,ipxe-bootimgs-x86.noarch, bind-utils
    state: latest
  notify: restart dnsmasq

- name: install dnsmasq.conf file
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    owner: dnsmasq
    group: dnsmasq
    mode: 0660
  notify: restart dnsmasq

- name: create /etc/dnsmasq.d directory
  ansible.builtin.file: 
    path: /etc/dnsmasq.d
    owner: dnsmasq
    group: dnsmasq
    mode: 0770
    state: directory

- name: install dnsmasq.d/pxe.conf file
  ansible.builtin.template:
    src: pxe.conf.j2
    dest: /etc/dnsmasq.d/pxe.conf
    owner: dnsmasq
    group: dnsmasq
    mode: 0660
  notify: restart dnsmasq
  when: pxe_enabled == true

- name: create directories for EFI boot files
  ansible.builtin.file:
    path: "/var/lib/tftpboot/{{item}}"
    owner: root
    group: root
    mode: 0644
    state: directory
  with_items: 
    - arm64-efi
    - x86-efi
    - x86_64-efi

- name: install x86 EFI boot files
  ansible.builtin.copy:
    src: "/usr/share/ipxe/{{item}}"
    dest: "/var/lib/tftpboot/x86-efi/{{item}}"
    owner: root
    group: root
    mode: 0644
    remote_src: true
  with_items:
    - ipxe-i386.efi

- name: install x86_64 EFI boot files
  ansible.builtin.copy:
    src: "/usr/share/ipxe/{{item}}"
    dest: "/var/lib/tftpboot/x86_64-efi/{{item}}"
    owner: root
    group: root
    mode: 0644
    remote_src: true
  with_items:
    - ipxe-x86_64.efi
    - undionly.kpxe
    - ipxe-snponly-x86_64.efi

- name: install arm64 EFI boot files
  ansible.builtin.copy:
    src: "/usr/share/ipxe/arm64-efi/{{item}}"
    dest: "/var/lib/tftpboot/arm64-efi/{{item}}"
    owner: root
    group: root
    mode: 0644
    remote_src: true
  with_items:
    - ipxe.efi
    - snponly.efi
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: make sure dnsmasq is enabled
  ansible.builtin.service:
    name: dnsmasq
    enabled: yes

- name: make sure firewalld is running
  ansible.builtin.service:
    name: firewalld
    enabled: yes
    state: started

- name: configure dnsmasq for DHCP
  block: 
    - name: install dnsmasq.d/dhcp.conf file
      ansible.builtin.template:
        src: dhcp.conf.j2
        dest: /etc/dnsmasq.d/dhcp.conf
        owner: dnsmasq
        group: dnsmasq
        mode: 0660
      notify: restart dnsmasq
  when: dhcp_enabled == true

- name: configure dnsmasq for DHCP
  block: 
    - name: install dnsmasq.d/dhcp.conf file
      ansible.builtin.template:
        src: dhcp.conf.j2
        dest: /etc/dnsmasq.d/dhcp.conf
        owner: dnsmasq
        group: dnsmasq
        mode: 0660
      notify: restart dnsmasq
  when: dhcp_enabled == true

- name: configure {{trusted_network_firewall_zone}} firewall zone for DHCP # Need this for PXE
  ansible.builtin.firewalld:
    zone: "{{trusted_network_firewall_zone}}"
    service: dhcp
    immediate: yes
    state: enabled
    permanent: yes
  notify: restart dnsmasq
  when: 
    - dhcp_enabled == true

- name: install /etc/hosts file
  ansible.builtin.copy:
    src: etc.hosts
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
  notify: restart dnsmasq

# This should be in the handler but handlers need to support blocks first
# see https://github.com/ansible/ansible/issues/14270 for details
- name: restore selinux context on /etc/dnsmasq.conf and etc/dnsmasq.d
  ansible.builtin.command: restorecon -RFv {{item}}
  with_items:
    - /etc/dnsmasq.conf 
    - /etc/dnsmasq.d

- name: configure firewall services for PXE Boot
  ansible.builtin.firewalld:
    zone: "{{trusted_network_firewall_zone}}"
    service: "{{item}}"
    immediate: yes
    state: enabled
    permanent: yes
  with_items:
    - dhcp
    - tftp
    - dns
  notify: restart dnsmasq

- name: configure firewall ports for PXE Boot
  ansible.builtin.firewalld:
    zone: "{{trusted_network_firewall_zone}}"
    port: "{{item}}"
    immediate: yes
    state: enabled
    permanent: yes
  with_items:
    - "68/tcp"
    - "68/udp"
    - "4011/udp"
  notify: restart dnsmasq

- name: configure dns to point at local server
  community.general.nmcli:
    conn_name: "{{trusted_network_interface}}"
    type: ethernet
    ip4: "{{trusted_network_ipaddr}}/{{trusted_network_prefix}}"
    gw4: "{{trusted_network_gateway}}"
    dns4: "{{trusted_network_dns_servers}}"
    state: present
      #  notify: restart NetworkManager # handler does not work here?

- name: restart NetworkManager # I wanted to reload but restart required
  ansible.builtin.service:
    name: NetworkManager
    state: restarted
...
