---
- name: Disable all Repos
  command: subscription-manager repos --disable "*"
  tags: sat-inst
    - sat-inst
    - sat-config

- name: Ensure subscription-manager not set to a specific version
  command: subscription-manager release --unset
  tags: sat-inst
    - sat-inst
    - sat-config

- name: Enable Required Repos
  command: subscription-manager repos \
             --enable rhel-{{rhel_release}}-server-rpms \
             --enable rhel-server-rhscl-{{rhel_release}}-rpms \
             --enable rhel-{{rhel_release}}-server-ansible-{{ansible_repo_version}}-rpms \
             --enable rhel-{{rhel_release}}-server-optional-rpms \
             --enable rhel-{{rhel_release}}-server-satellite-{{sat_version}}-rpms \
             --enable rhel-{{rhel_release}}-server-satellite-maintenance-6-rpms
  tags: sat-inst
    - sat-inst
    - sat-config

- name: Ensure Subscription Manager is not set to use a specific RHEL Release
  command: subscription-manager release --unset
  tags: sat-inst
    - sat-inst
    - sat-config

- name: clean any yum meta data
  command: yum -y clean all
  args:
    warn: no
  tags: sat-inst
    - sat-inst
    - sat-config
    
- name: install sos
  package:
    name: sos
    state: latest
  tags: sat-inst
    - sat-inst
    - sat-config

- name: Ensure that firewalld is installed
  yum:
    name: firewalld
    state: latest
  tags: sat-inst
    - sat-inst
    - sat-config

- name: Ensure that firewalld is started
  service:
    name: firewalld
    state: started
  tags: 
    - sat-inst
    - sat-config

- name: assign eth0 to "public" zone
  firewalld:
    zone: public
    interface: eth0
    state: enabled
  tags: 
    - sat-inst
    - sat-config

- name: deploy firewalld rules
  firewalld:
    zone: public
    immediate: yes
    port: "{{ item }}"
    state: enabled
    permanent: yes
  with_items:
    - "53/udp"
    - "53/tcp"
    - "67/udp"
    - "69/udp"
    - "80/tcp"
    - "443/tcp"
    - "5000/tcp"
    - "5647/tcp"
    - "8000/tcp"
    - "8140/tcp"
    - "9090/tcp"
  tags: 
    - sat-inst
    - sat-config

- name: Install satellite
  yum:
    name: satellite
    state: latest
  tags: 
    - sat-inst
    - sat-config

- name: Execute satellite-installer
  command: satellite-installer --scenario satellite \
    --foreman-initial-organization "{{ foreman_initial_organization }}" \
    --foreman-initial-location "{{ foreman_initial_location }}" \
    --foreman-admin-username "{{ foreman_admin_username }}" \
    --foreman-admin-password "{{ foreman_admin_password }}" \
    --foreman-proxy-dns-managed=false \
    --foreman-proxy-dhcp-managed=false
  tags: 
    - sat-inst

#  - name: Execute satellite-installer
#    command: satellite-installer --scenario satellite \
#      --foreman-initial-organization "{{ foreman_initial_organization }}" \
#      --foreman-initial-location "{{ foreman_initial_location }}" \
#      --foreman-proxy-dns "{{ foreman_proxy_dns }}" \
#      --foreman-proxy-dns-interface "{{ foreman_proxy_dns_interface }}" \
#      --foreman-proxy-dns-zone "{{ foreman_proxy_dns_zone }}" \
#      --foreman-proxy-dns-forwarders "{{ foreman_proxy_dns_forwarders }}"  \
#      --foreman-proxy-dns-reverse "{{ foreman_proxy_dns_reverse }}" \
#      --foreman-proxy-tftp "{{ foreman_proxy_tftp }}" \
#      --foreman-proxy-tftp-servername "{{ foreman_proxy_tftp_servername }}" \
#      --foreman-admin-username "{{ foreman_admin_username }}" \
#      --foreman-admin-password "{{ foreman_admin_password }}"
#  tags: 
#    - sat-inst

- name: create {{user_home_dir}}/.hammer directory
  file:
    path: "{{user_home_dir}}/.hammer"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0700
    state: directory
  tags: 
    - sat-inst
    - sat-config

- name: install {{user_home_dir}}/.hammer/cli_config.yml
  template:
    src: cli_config.yml.j2
    dest: "{{user_home_dir}}/.hammer/cli_config.yml"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0600
  tags: 
    - sat-inst
    - sat-config

