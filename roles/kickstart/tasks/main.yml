---
- name: include luks key data
  include_vars:
    file: luks-key.yml

- name: install tftp-server, tftp, and firewalld
  ansible.builtin.package:
    name: tftp-server, tftp, syslinux, firewalld
    state: latest

- name: start and enable tftp service
  ansible.builtin.service:
    name: tftp
    state: started
    enabled: yes

- name: make sure firewalld is running and enabled
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: yes

- name: open firewall ports for tftp
  ansible.builtin.firewalld:
    zone: "{{trusted_firewall_zone}}"
    service: tftp
    immediate: yes
    state: enabled
    permanent: yes

- name: configure bootpc and pxe services in firewalld config
  ansible.builtin.firewalld:
    zone: "{{trusted_firewall_zone}}"
    port: "{{ item }}"
    permanent: yes
    immediate: yes
    state: enabled
  with_items:
    - 68/tcp    # bootpc TCP
    - 68/udp    # bootpc UDP
    - 4011/udp  # pxe

- name: synchronize /usr/share/syslinux content to {{tftpbootdir}}
  ansible.builtin.synchronize:
    src: "/usr/share/syslinux/"
    dest: "{{tftpbootdir}}"
    archive: yes
    delete: yes
    links: yes
    recursive: yes
    times: yes
    rsync_opts: 
      - "--exclude=pxelinux.cfg"
      - "--exclude=images"
  delegate_to: "{{ inventory_hostname }}"

- name: create {{tftpbootdir}}/{pxelinux.cfg,images} directories
  ansible.builtin.file:
    path: "{{tftpbootdir}}/{{item}}"
    owner: root
    group: root
    mode: 0755
    state: directory
  with_items:
    - images
    - pxelinux.cfg

- name: deploy {{tftpbootdir}}/pxelinux.cfg/default
  ansible.builtin.copy:
    src: default
    dest: "{{tftpbootdir}}/pxelinux.cfg/default"
    owner: root
    group: root
    mode: 0644

- name: create {{tftpbootdir}}/pxelinux.cfg/Linux directory
  ansible.builtin.file:
    path: "{{tftpbootdir}}/pxelinux.cfg/Linux"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: deploy {{tftpbootdir}}/pxelinux.cfg/Linux Files
  ansible.builtin.template:
    src: "{{item}}.{{ansible_hostname}}.j2"
    dest: "{{tftpbootdir}}/pxelinux.cfg/Linux/{{item}}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "{{pxelinux_files}}"

- name: create /root/logs directory
  ansible.builtin.file:
    path: "/root/logs"
    owner: root
    group: root
    mode: 0700
    state: directory

- name: create crontab entry to restart tftp server hourly because it stops?
  ansible.builtin.cron:
    name: "Restart TFTP"
    user: "root"
    minute: "0"
    hour: "*"
    job: "/usr/bin/systemctl restart tftp > /root/logs/restart-tftp.log 2>&1"


################################################################################
# RHEL images Files copies                                                     #
################################################################################
- name: create RHEL {{tftpbootdir}}/images/linux/rhel/version/arch directories
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/rhel/{{item[0]}}/{{item[1]}}"
    owner: root
    group: root
    mode: 0755
    state: directory
    recurse: yes
  with_nested:
    - "{{rhel_versions}}"
    - "{{rhel_architectures}}"

- name: synchronize RHEL pxeboot content to {{tftpbootdir}}/images/fedora
  ansible.builtin.synchronize:
    src: "{{installdir}}/Linux/rhel/{{item[0]}}/{{item[1]}}/images/pxeboot/"
    dest: "{{tftpbootdir}}/images/rhel/{{item[0]}}/{{item[1]}}/"
    archive: yes
    delete: yes
    links: yes
    times: yes
  delegate_to: "{{ inventory_hostname }}"
  with_nested:
    - "{{rhel_versions}}"
    - "{{rhel_architectures}}"

################################################################################
# CentOS images Files copies                                                   #
################################################################################
- name: create CentOS 7 {{tftpbootdir}}/images/linux/centos/version/arch directories
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/centos/7/{{item}}"
    owner: root
    group: root
    mode: 0755
    state: directory
    recurse: yes
  with_items:
    - "{{centos_architectures}}"

- name: synchronize CentOS 7 content to {{tftpbootdir}}/images/centos
  ansible.builtin.synchronize:
    src: "{{installdir}}/Linux/centos/7/os/{{item}}/images/pxeboot/"
    dest: "{{tftpbootdir}}/images/centos/7/{{item}}/"
    archive: yes
    delete: yes
    links: yes
    times: yes
  delegate_to: "{{ inventory_hostname }}"
  with_items:
    - "{{centos_architectures}}"

- name: create CentOS 8+ {{tftpbootdir}}/images/linux/centos/version/arch directories
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/centos/8/{{item}}"
    owner: root
    group: root
    mode: 0755
    state: directory
    recurse: yes
  with_items:
    - "{{centos_architectures}}"

- name: synchronize CentOS 8+ pxeboot content to {{tftpbootdir}}/images/centos
  ansible.builtin.synchronize:
    src: "{{installdir}}/Linux/centos/8/BaseOS/{{item}}/os/images/pxeboot/"
    dest: "{{tftpbootdir}}/images/centos/8/{{item}}/"
    archive: yes
    delete: yes
    links: yes
    times: yes
  delegate_to: "{{ inventory_hostname }}"
  with_items:
    - "{{centos_architectures}}"

################################################################################
# Fedora images Files copies                                                   #
################################################################################
- name: create Fedora {{tftpbootdir}}/images/linux/fedora/version/arch directories
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/fedora/{{item[0]}}/{{item[1]}}"
    owner: root
    group: root
    mode: 0755
    state: directory
    recurse: yes
  with_nested:
    - "{{fedora_versions}}"
    - "{{fedora_architectures}}"

- name: synchronize Fedora pxeboot content to {{tftpbootdir}}/images/fedora
  ansible.builtin.synchronize:
    src: "{{installdir}}/Linux/fedora/releases/{{item[0]}}/Everything/{{item[1]}}/os/images/pxeboot/"
    dest: "{{tftpbootdir}}/images/fedora/{{item[0]}}/{{item[1]}}/"
    archive: yes
    delete: yes
    links: yes
    times: yes
  delegate_to: "{{ inventory_hostname }}"
  with_nested:
    - "{{fedora_versions}}"
    - "{{fedora_architectures}}"

################################################################################
# Ubuntu images Files copies                                                   #
################################################################################
- name: create {{tftpbootdir}}/images/ubuntu/server/version/architeture directory
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/ubuntu/server/{{item[0]}}/{{item[1]}}/"
    owner: root
    group: root
    mode: 0755
    state: directory
    recurse: yes
  with_nested:
    - "{{ubuntu_server_versions}}"
    - "{{ubuntu_server_architectures}}"

#- name: synchronize Ubuntu Server netboot content to {{tftpbootdir}}/images/ubuntu
#  ansible.builtin.synchronize:
#    src: "{{installdir}}/Linux/ubuntu/server/{{item[0]}}/{{item[1]}}/install/netboot/ubuntu-installer/{{item[1]}}/"
#    dest: "{{tftpbootdir}}/images/ubuntu/server/{{item[0]}}/{{item[1]}}/"
#    archive: yes
#    delete: yes
#    links: yes
#    times: yes
#  delegate_to: "{{ inventory_hostname }}"
#  with_nested:
#    - "{{ubuntu_server_versions}}"
#    - "{{ubuntu_server_architectures}}"

################################################################################
# OpenWRT images Files copies                                                  #
################################################################################
- name: create OpenBSD {{tftpbootdir}}/images/openwrt directory
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/openwrt"
    owner: root
    group: root
    mode: 0755
    state: directory
    recurse: yes

- name: synchronize OpenWRT image content to {{tftpbootdir}}/images/openwrt
  ansible.builtin.synchronize:
    src: "{{archivedir}}/OpenWRT/images/"
    dest: "{{tftpbootdir}}/images/openwrt"
    archive: yes
    delete: yes
    links: yes
    times: yes
  delegate_to: "{{ inventory_hostname }}"

################################################################################
# OpenBSD images Files copies                                                  #
################################################################################
- name: create OpenBSD {{tftpbootdir}}/images/linux/openbsd/architecture directories
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/openbsd/{{item}}"
    owner: root
    group: root
    mode: 0755
    state: directory
    recurse: yes
  with_items:
    - "{{openbsd_versions}}"

################################################################################
# vmware images Files copies                                                   #
################################################################################
- name: setup vmware network boot on server0
  block:
    - name: create vmware {{tftpbootdir}}/images/linux/rhel/architecture directories
      ansible.builtin.file:
        path: "{{tftpbootdir}}/images/vmware/{{item}}"
        owner: root
        group: root
        mode: 0755
        state: directory
        recurse: yes
      with_items:
        - "{{vmware_versions}}"
  when: ansible_hostname == "server0"

################################################################################
# windows images Files copies                                                  #
################################################################################
- name: create {{tftpbootdir}}/pxelinux.cfg/Linux directory
  ansible.builtin.file:
    path: "{{tftpbootdir}}/pxelinux.cfg/Windows"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: deploy {{tftpbootdir}}/pxelinux.cfg/Windows Files
  ansible.builtin.template:
    src: "{{item}}.{{ansible_hostname}}.j2"
    dest: "{{tftpbootdir}}/pxelinux.cfg/Windows/{{item}}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "{{pxewindows_files}}"

- name: create windows {{tftpbootdir}}/images/windows/10/amd64 directory
  ansible.builtin.file:
    path: "{{tftpbootdir}}/images/windows/10/amd64"
    owner: root
    group: root
    mode: 0755
    recurse: yes

- name: copy WinPE_amd64.iso to {{tftpbootdir}}/images/windows/10/amd64
  ansible.builtin.copy:
    src: "{{archivedir}}/Windows/Microsoft/WinPE/WinPE_amd64.iso"
    dest: "{{tftpbootdir}}/images/windows/10/amd64"
    owner: root
    group: root
    remote_src: yes
  delegate_to: "{{ inventory_hostname }}"

- name: create {{doc_files_dir}}
  ansible.builtin.file:
    path: "{{ doc_files_dir }}"
    state: directory
    owner: "{{ repo_owner }}"
    group: "{{ repo_owner }}"
    mode: '0755'

- name: deploy {{config_files_dir}}/net_use_for_winpe_pxe.txt
  ansible.builtin.copy:
    src: net_use_for_winpe_pxe.txt
    dest: "{{ doc_files_dir }}/"
    owner: "{{ repo_owner }}"
    group: "{{ repo_owner }}"
    mode: 0644

################################################################################
# Restore selinux context for newly copied files                               #
################################################################################
- name: restore selinux context for {{tftpbootdir}}
  ansible.builtin.command: "restorecon -RFv {{tftpbootdir}}"

################################################################################
# Deploy kickstart configuration files                                         #
################################################################################
- name: make sure {{ks_config_dir}} exists
  ansible.builtin.file:
    path: "{{ks_config_dir}}"
    state: directory
    owner: chris
    group: chris
    mode: 0755

- name: deploy {{ks_config_dir}} Files
  ansible.builtin.template:
    src: "ks-configs/{{item}}.j2"
    dest: "{{ks_config_dir}}/{{item}}"
    owner: chris
    group: chris
    mode: 0644
  with_items:
    - "{{ks_configs_list}}"

- name: deploy callback-service templates to {{config_files_url}} Files
  ansible.builtin.template:
    src: "{{item}}.j2"
    dest: "{{config_files_dir}}/{{item}}"
    owner: chris
    group: chris
    mode: 0755
  with_items:
    - rhel6-callback-service.sh
    - rhel7-callback.service

- name: restore selinux context for {{ks_config_dir}}
  ansible.builtin.command: "restorecon -RFv {{ks_config_dir}}"
  tags: restorecon

