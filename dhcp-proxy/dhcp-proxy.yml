#---
#
# Configure dhcp-proxy
#

- hosts: dhcp-proxy
  become: yes

  vars:
    work_server: false
    personal_server: true
    trusted_network_firewall_zone: public
    install_server_url: http://install.internal.tjon.net/
    install_server_dir: install.internal.tjon.net:/Install
    tftpbootdir: /var/lib/tftpboot
    linux_pxe_files:
      - LinuxMenu
      - fedora
      - rhel
      - rhel-satclients
      - rhel-testvms
    ocp_pxe_files:
      - OCPMenu
    rhel_versions:
      - 8
      - 9
    rhel_boot_files:
      - vmlinuz
      - initrd.img
    cpu_architectures:
      - x86_64
      - aarch64

  roles:
    - role: sm-register
      tags: ['sm-register']

    - role: insights-register
      tags: ['insights-register']

#    - role: config-local-repos
#      tags: ['config-local-repos']

    - role: disable-ipv6
      tags: ['disable-ipv6']

    - role: selinux
      tags: ['selinux']

    - role: limit-kernels
      tags: ['limit-kernels']

    - role: sshd-config
      tags: ['sshd-config']

    - role: ssh-config
      tags: ['ssh-config']

    - role: cockpit
      tags: ['cockpit']

    - role: shell-env #including both ssh-keys on server and p51s ??
      tags: ['shell-env']

    - role: set-default-editor
      tags: ['set-default-editor']

    - role: apply-updates
      tags: ['apply-updates']

    - role: reboot-if-required
      tags: ['reboot-if-required']

  tasks:
    - name: install packages
      ansible.builtin.package:
        name: dnsmasq, firewalld, syslinux, syslinux-tftpboot
        state: latest
    
    - name: install dnsmasq.conf file
      ansible.builtin.copy:
        src: dnsmasq.conf
        dest: /etc/dnsmasq.conf
        owner: root
        group: root
        mode: 0644

    - name: restore selinux context on /etc/dnsmasq.conf
      ansible.builtin.command: restorecon -RFv /etc/dnsmasq.conf 
    
    - name: configure firewall zone for DHCP
      ansible.builtin.firewalld:
        zone: "{{trusted_network_firewall_zone}}"
        service: "{{item}}" 
        immediate: yes
        state: enabled
        permanent: yes
      with_items:
        - dhcp
        - tftp

    - name: configure bootpc and pxe services in trusted firewall zone
      ansible.builtin.firewalld:
        zone: "{{trusted_network_firewall_zone}}"
        port: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      with_items:
        - 68/tcp    # bootpc TCP
        - 68/udp    # bootpc UDP
        - 4011/udp  # pxe

    - name: create {{tftpbootdir}} directory
      ansible.builtin.file:
        path: "{{tftpbootdir}}"
        owner: root
        group: root
        mode: 0755
        state: directory

    - name: make sure dnsmasq is enabled and restarted
      ansible.builtin.service:
        name: dnsmasq
        enabled: yes
        state: restarted

    - name: make sure firewalld is enabled and restarted
      ansible.builtin.service:
        name: firewalld
        enabled: yes
        state: restarted

    - name: synchronize /usr/share/syslinux content to {{tftpbootdir}}
      ansible.builtin.synchronize:
        src: "/usr/share/syslinux/"
        dest: "{{tftpbootdir}}"
        archive: yes
        delete: yes
        links: yes
        recursive: yes
        times: yes
        rsync_opts:
          - "--exclude=pxelinux.cfg"
          - "--exclude=images"
      delegate_to: "{{ inventory_hostname }}"

################################################################################
# Legacy pxelinux.cfg configuration                                            #
################################################################################
    - name: create {{tftpbootdir}}/pxelinux.cfg directory
      ansible.builtin.file:
        path: "{{tftpbootdir}}/pxelinux.cfg"
        owner: root
        group: root
        mode: 0755
        state: directory

    - name: deploy {{tftpbootdir}}/pxelinux.cfg/default
      ansible.builtin.copy:
        src: files/default
        dest: "{{tftpbootdir}}/pxelinux.cfg/default"
        owner: root
        group: root
        mode: 0644

    - name: create {{tftpbootdir}}/pxelinux.cfg/Linux directory
      ansible.builtin.file:
        path: "{{tftpbootdir}}/pxelinux.cfg/Linux"
        owner: root
        group: root
        mode: 0755
        state: directory
      tags: rhel_pxe_files

    - name: deploy {{tftpbootdir}}/pxelinux.cfg/Linux Files
      ansible.builtin.template:
        src: "{{item}}.j2"
        dest: "{{tftpbootdir}}/pxelinux.cfg/Linux/{{item}}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - "{{linux_pxe_files}}"
      tags: rhel_pxe_files

    - name: create {{tftpbootdir}}/pxelinux.cfg/OpenShift directory
      ansible.builtin.file:
        path: "{{tftpbootdir}}/pxelinux.cfg/OpenShift"
        owner: root
        group: root
        mode: 0755
        state: directory
      tags: ocp_pxe_files

    - name: deploy {{tftpbootdir}}/pxelinux.cfg/OpenShift Files
      ansible.builtin.template:
        src: "{{item}}.j2"
        dest: "{{tftpbootdir}}/pxelinux.cfg/OpenShift/{{item}}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - "{{ocp_pxe_files}}"
      tags: ocp_image_files

################################################################################
# RHEL image Files copies                                                      #
################################################################################
    - name: create {{tftpbootdir}}/images directory
      ansible.builtin.file:
        path: "{{tftpbootdir}}/pxelinux.cfg"
        owner: root
        group: root
        mode: 0755
        state: directory
      tags: rhel_image_files

    - name: create RHEL /images/linux/rhel/version/arch directories
      ansible.builtin.file:
        path: "{{tftpbootdir}}/images/rhel/{{item[0]}}/{{item[1]}}"
        owner: root
        group: root
        mode: 0755
        state: directory
        recurse: yes
      with_nested:
        - "{{rhel_versions}}"
        - "{{cpu_architectures}}"
      tags: rhel_image_files

    - name: install RHEL pxeboot content to {{tftpbootdir}}/images/rhel
      ansible.builtin.get_url:
        url: "{{install_server_url}}/Linux/rhel/{{item[0]}}/{{item[1]}}/images/pxeboot/{{item[2]}}"
        dest: "{{tftpbootdir}}/images/rhel/{{item[0]}}/{{item[1]}}/{{item[2]}}"
        mode: u=rw,g=r,o=r
        owner: root
        group: root
        force: true
      with_nested:
        - "{{rhel_versions}}"
        - "{{cpu_architectures}}"
        - "{{rhel_boot_files}}"
      tags: rhel_image_files

################################################################################
# Configure grub EFI boot                                                      #
################################################################################
    - name: create /root/packages/rhel-grub2-efi-x64 for grubx64.efi extraction
      ansible.builtin.file:
        path: /root/packages/rhel-grub2-efi-x64
        owner: root
        group: root
        mode: 0755
        state: directory
      tags: rhel_image_files

    - name: Download the latest version of rhel-grub2-efi-x64
      ansible.builtin.dnf:
        name: grub2-efi-x64
        state: latest
        installroot: /root/packages/rhel-grub2-efi-x64
      tags: rhel_image_files

    - name: Install grubx64.efi file
      ansible.builtin.copy:
        src: /root/packages/rhel-grub2-efi-x64/boot/efi/EFI/redhat/grubx64.efi
        dest: "{{tftpbootdir}}"
        owner: root
        group: root
        mode: 0644
        remote_src: true
      tags: rhel_image_files

    - name: Install grub.cfg file
      ansible.builtin.template:
        src: grub.cfg.j2
        dest: "{{tftpbootdir}}/grub.cfg"
        owner: root
        group: root
        mode: 0644
      tags: rhel_image_files

    - name: restore selinux context on {{tftpbootdir}}
      ansible.builtin.command: "restorecon -RFv {{tftpbootdir}}"
      tags: rhel_image_files
    

...

