---
- name: Launch {{aws_instance_count}} AWS Windows Instance(s) 
  ec2:
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
    vpc_subnet_id: "{{ aws_vpc_subnet_id }}"
    keypair: "{{ aws_key_pair_name }}"
    group_id: "{{ aws_sg_id }}"
    type: "{{ aws_instance_type }}"
    image: "{{ aws_image }}"
    region: "{{ aws_region }}"
    instance_tags: 
      Name: "{{ aws_win_prefix }}{{aws_instance_name}}{{item}}"
      ansible_group: "{{aws_win_vm_group}}"
      type: "{{ aws_instance_type }}"
      group: "{{ aws_security_group }}"
    assign_public_ip: "{{public_ip_needed}}"
    user_data: "{{ lookup('template', 'userdata.txt.j2', template_vars=dict(hostname=(aws_win_prefix + aws_instance_name + item)| regex_replace('_','-'))) }}"
    wait: true
    count_tag: 
      Name: "{{ aws_win_prefix }}{{aws_instance_name}}{{item}}"
    exact_count: 1
  register: ec2_result
  delegate_to: localhost
  with_sequence: count="{{aws_instance_count}}"

- name: Wait for WinRM to come up
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 5986 
    delay: 60
    timeout: 600
    state: started
  with_items: "{{ ec2_result.results | map(attribute='tagged_instances') | list }}"
  delegate_to: localhost

#- name: Add hosts to in memory inventory
#  add_host:
#    name: "{{ item.tags.Name | regex_replace('_','-') }}"
#    ansible_host: "{{ item.public_dns_name }}"
#    ansible_user: Administrator
#    ansible_password: "{{admin_password}}"
#    ansible_port: 5986
#    ansible_connection: winrm
#    ansible_winrm_transport: credssp
#    ansible_winrm_server_cert_validation: ignore
#    groups: new_win_hosts
#  with_items: "{{ ec2_result.results | map(attribute='tagged_instances') | list }}"
#  delegate_to: localhost

